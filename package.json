{
	"name": "tab-groups",
	"displayName": "Tab Groups",
	"description": "Save and Restore tab groups",
	"publisher": "usama8800",
	"repository": {
		"type": "git",
		"url": "https://github.com/usama8800/VSCode-Tab-Groups.git"
	},
	"version": "2.0.1",
	"main": "./out/extension.js",
	"extensionDependencies": [
		"vscode.git"
	],
	"engines": {
		"vscode": "^1.67.0"
	},
	"devDependencies": {
		"@types/chai": "^4.2.18",
		"@types/glob": "^7.1.3",
		"@types/lodash": "^4.14.165",
		"@types/mocha": "^8.2.2",
		"@types/node": "^15.0.1",
		"@types/vscode": "^1.56.0",
		"@typescript-eslint/eslint-plugin": "^4.24.0",
		"@typescript-eslint/parser": "^4.24.0",
		"chai": "^4.3.4",
		"eslint": "^7.25.0",
		"kbm-robot": "0.0.4",
		"mocha": "^8.4.0",
		"simple-git": "^3.5.0",
		"typescript": "^4.2.4",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"lodash": "^4.17.21"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"*"
	],
	"contributes": {
		"viewsWelcome": [
			{
				"view": "tab-groups-groups",
				"contents": "No saved tab groups.\n[Save current tabs](command:extension.saveGroup)"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "tab-groups",
					"title": "Tab Groups",
					"icon": "icons/icon.svg"
				}
			]
		},
		"views": {
			"tab-groups": [
				{
					"id": "tab-groups-groups",
					"name": "Tab Groups"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"when": "view == tab-groups-groups",
					"command": "extension.saveGroupFromView",
					"group": "navigation"
				},
				{
					"when": "view == tab-groups-groups",
					"command": "extension.undoFromView",
					"group": "navigation"
				},
				{
					"when": "view == tab-groups-groups",
					"command": "extension.closeAllEditors",
					"group": "navigation"
				},
				{
					"when": "view == tab-groups-groups",
					"command": "extension.trackGroupFromView",
					"group": "inline"
				},
				{
					"when": "view == tab-groups-groups",
					"command": "extension.stopTrackingGroupFromView",
					"group": "inline"
				}
			],
			"view/item/context": [
				{
					"when": "view == tab-groups-groups && viewItem == group",
					"command": "extension.saveGroupFromView",
					"group": "inline"
				},
				{
					"when": "view == tab-groups-groups && viewItem == group",
					"command": "extension.restoreGroupFromView"
				},
				{
					"when": "view == tab-groups-groups && viewItem == group",
					"command": "extension.renameGroupFromView"
				},
				{
					"when": "view == tab-groups-groups && viewItem == group",
					"command": "extension.deleteGroupFromView"
				},
				{
					"when": "view == tab-groups-groups && viewItem =~ /^split$|^file$/",
					"command": "extension.deleteEditorGroupFromView",
					"group": "inline"
				}
			],
			"commandPalette": [
				{
					"command": "extension.closeAllEditors",
					"when": "false"
				},
				{
					"command": "extension.stopTrackingGroupFromView",
					"when": "false"
				},
				{
					"command": "extension.trackGroupFromView",
					"when": "false"
				},
				{
					"command": "extension.undoFromView",
					"when": "false"
				},
				{
					"command": "extension.restoreGroupFromView",
					"when": "false"
				},
				{
					"command": "extension.saveGroupFromView",
					"when": "false"
				},
				{
					"command": "extension.renameGroupFromView",
					"when": "false"
				},
				{
					"command": "extension.deleteGroupFromView",
					"when": "false"
				},
				{
					"command": "extension.deleteEditorGroupFromView",
					"when": "false"
				},
				{
					"command": "extension.openFileFromView",
					"when": "false"
				}
			]
		},
		"commands": [
			{
				"command": "extension.saveGroup",
				"title": "Save tab group"
			},
			{
				"command": "extension.clearAndSaveGroup",
				"title": "Save tab group and close all tabs"
			},
			{
				"command": "extension.updateGroup",
				"title": "Update tab group"
			},
			{
				"command": "extension.updateLastGroup",
				"title": "Update last used tab group"
			},
			{
				"command": "extension.restoreGroup",
				"title": "Restore tab group"
			},
			{
				"command": "extension.undo",
				"title": "Undo tab groups operation"
			},
			{
				"command": "extension.closeAllEditors",
				"title": "Close all editors",
				"icon": {
					"dark": "icons/minimize_dark.svg",
					"light": "icons/minimize_light.svg"
				}
			},
			{
				"command": "extension.trackGroup",
				"title": "Track current group"
			},
			{
				"command": "extension.stopTrackingGroup",
				"title": "Stop tracking current group"
			},
			{
				"command": "extension.stopTrackingGroupFromView",
				"title": "Stop tracking current group"
			},
			{
				"command": "extension.trackGroupFromView",
				"title": "Track current group"
			},
			{
				"command": "extension.undoFromView",
				"title": "Undo",
				"icon": {
					"dark": "icons/undo_dark.svg",
					"light": "icons/undo_light.svg"
				}
			},
			{
				"command": "extension.restoreGroupFromView",
				"title": "Restore tab group",
				"icon": {
					"dark": "icons/restore_dark.svg",
					"light": "icons/restore_light.svg"
				}
			},
			{
				"command": "extension.saveGroupFromView",
				"title": "Save tab group",
				"icon": {
					"dark": "icons/save_dark.svg",
					"light": "icons/save_light.svg"
				}
			},
			{
				"command": "extension.renameGroupFromView",
				"title": "Rename"
			},
			{
				"command": "extension.deleteGroupFromView",
				"title": "Delete"
			},
			{
				"command": "extension.deleteEditorGroupFromView",
				"title": "Delete",
				"icon": {
					"dark": "icons/delete_dark.svg",
					"light": "icons/delete_light.svg"
				}
			},
			{
				"command": "extension.renameGroup",
				"title": "Rename tab group"
			},
			{
				"command": "extension.deleteGroup",
				"title": "Delete tab group"
			},
			{
				"command": "extension.clearAndRestoreGroup",
				"title": "Restore tab group and close all others"
			},
			{
				"command": "extension.openFileFromView",
				"title": "Open file"
			}
		],
		"configuration": [
			{
				"title": "Tab Groups",
				"properties": {
					"tab-groups.saveGlobally": {
						"type": "boolean",
						"scope": "window",
						"description": "Save tab groups globally or locally in a workspace",
						"default": true
					},
					"tab-groups.relativePaths": {
						"type": "boolean",
						"scope": "window",
						"description": "Try to open the file relative to the workspace folders. With multiple workspace folders, order matters",
						"default": false
					},
					"tab-groups.gitBranchGroups": {
						"type": "string",
						"scope": "window",
						"description": "When changing git branches, save and restore groups automatically",
						"default": "Save and Restore",
						"enum": [
							"Save and Restore",
							"Save only",
							"Nothing"
						]
					},
					"tab-groups.sidebarRestoreStyle": {
						"type": "string",
						"description": "What to do with the editors already open when restoring from the sidebar",
						"enum": [
							"Update current; Close others",
							"Update current; Keep others",
							"Close others",
							"Keep others"
						],
						"default": "Keep others"
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"preecompile": "bash -c \"rm -rf ./out\"",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"test": "npm run compile && node --inspect ./out/test/runTest.js",
		"readyTestWorkspace": "node ./out/test/runTest.js readyOnly"
	},
	"__metadata": {
		"id": "b82ec2db-a68d-48b0-94f7-bde2fcb91c8e",
		"publisherDisplayName": "Usama Ahsan",
		"publisherId": "0d0d4019-166a-467f-a7aa-21567fb9d9a6",
		"isPreReleaseVersion": false
	}
}
